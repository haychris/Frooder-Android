package liberum.cibum.frooder.dummy;

import java.util.Date;
import java.util.List;

import com.parse.ParseGeoPoint;
import com.parse.ParseObject;

import android.content.Context;
import android.location.Location;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;

public class FoodListingAdapter extends ArrayAdapter<ParseObject> {
	
	private Context mContext;
	private ParseGeoPoint parseUserLocation;
	public FoodListingAdapter(Context context, int resource, List<ParseObject> objects) {
		super(context, resource, objects);
		mContext = context;
	}

	public FoodListingAdapter(Context context, int resource,
			int textViewResourceId, List<ParseObject> objects) {
		super(context, resource, textViewResourceId, objects);
		mContext = context;
	}
	public void setUserLocation(Location userLocation) {
		if (userLocation == null)
			return;
		if (parseUserLocation == null) {
			parseUserLocation = new ParseGeoPoint(userLocation.getLatitude(), 
												  userLocation.getLongitude());
		} else {
			parseUserLocation.setLatitude(userLocation.getLatitude());
			parseUserLocation.setLongitude(userLocation.getLongitude());
		}
		
	}
	
	public View getView(int position, View convertView, ViewGroup parent) {
		if (convertView == null) {
			LayoutInflater inflater = LayoutInflater.from(mContext);
			convertView = inflater.inflate(liberum.cibum.frooder.R.layout.food_card, parent, false);
		}
		ParseObject foodItem = this.getItem(position);
		
		
		ImageView foodPhoto = (ImageView)((ViewGroup) convertView).getChildAt(0);
		
		TextView foodTitle = (TextView) ((ViewGroup) convertView).getChildAt(1);
		foodTitle.setText(foodItem.getString("foodType"));
		
		TextView foodDistance = (TextView) ((ViewGroup) convertView).getChildAt(2);
		ParseGeoPoint foodLocation = foodItem.getParseGeoPoint("foodLocation");
		if (foodLocation != null && parseUserLocation != null)
			foodDistance.setText(foodLocation.distanceInKilometersTo(parseUserLocation)*1000 + " meters");
		
		TextView foodDescription = (TextView) ((ViewGroup) convertView).getChildAt(3);
		foodDescription.setText("There's " + foodItem.getInt("relativeQuantity") + " at " + foodItem.getString("whereText") + "!");
		
		TextView foodTimePosted = (TextView) ((ViewGroup) convertView).getChildAt(4);
		Date updateDate = foodItem.getCreatedAt();
		if (updateDate == null)
			updateDate = new Date(0);
		Long timeSinceUpdate = (System.currentTimeMillis() - updateDate.getTime()) / 1000;
		if (timeSinceUpdate < 60) { 
			foodTimePosted.setText(timeSinceUpdate + "s");
		} else if ((timeSinceUpdate /= 60) < 60){
			foodTimePosted.setText(timeSinceUpdate + "m");
		} else if ((timeSinceUpdate /= 60) < 24) {
			foodTimePosted.setText(timeSinceUpdate + "h");
		} else if ((timeSinceUpdate /= 24) < 365) {
			foodTimePosted.setText(timeSinceUpdate + "d");
		} else {
			foodTimePosted.setText(timeSinceUpdate/365 + "y");
		}
		
		ProgressBar chanceOfEating = (ProgressBar) ((ViewGroup) convertView).getChildAt(5);
		chanceOfEating.setProgress((int) (((double) foodItem.getInt("relativeQuantity") / 10.0) * chanceOfEating.getMax()));

		return convertView;
	}

} 
