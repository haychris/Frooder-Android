package liberum.cibum.frooder;

import java.util.Comparator;
import java.util.Date;

import com.parse.Parse;
import com.parse.ParseACL;
import com.parse.ParseAnalytics;
import com.parse.ParseException;
import com.parse.ParseInstallation;
import com.parse.ParseObject;
import com.parse.ParsePush;
import com.parse.ParseUser;
import com.parse.PushService;
import com.parse.SaveCallback;

import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.app.Activity;
import android.app.Fragment;




/**
 * An activity representing a list of Food Listings. This activity
 * has different presentations for handset and tablet-size devices. On
 * handsets, the activity presents a list of items, which when touched,
 * lead to a {@link FoodListingDetailActivity} representing
 * item details. On tablets, the activity presents the list of items and
 * item details side-by-side using two vertical panes.
 * <p>
 * The activity makes heavy use of fragments. The list of items is a
 * {@link FoodListingListFragment} and the item details
 * (if present) is a {@link FoodListingDetailFragment}.
 * <p>
 * This activity also implements the required
 * {@link FoodListingListFragment.Callbacks} interface
 * to listen for item selections.
 */
public class FoodListingListActivity extends Activity
        implements FoodListingListFragment.Callbacks {

    /**
     * Whether or not the activity is in two-pane mode, i.e. running on a tablet
     * device.
     */
    private boolean mTwoPane;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_foodlisting_list);
        //FloatingActionButton mFab = (FloatingActionButton)findViewById(R.id.fabbutton);

        if (findViewById(R.id.foodlisting_detail_container) != null) {
            // The detail container view will be present only in the
            // large-screen layouts (res/values-large and
            // res/values-sw600dp). If this view is present, then the
            // activity should be in two-pane mode.
            mTwoPane = true;

            // In two-pane mode, list items should be given the
            // 'activated' state when touched. 
            ((FoodListingListFragment) getFragmentManager() 
                    .findFragmentById(R.id.foodlisting_list))
                    .setActivateOnItemClick(true); 
        }

        // TODO: If exposing deep links into your app, handle intents here.
//        Parse.initialize(FrooderApplication.getInstance(), "peOCyFSug2utyLbNmeoCmqXXL38hp2B1epY0UBOV", "H6gL0iFmKk7jCDT9danWB8zuMm5BpoPvkOvSNwkh");
//        // Also in this method, specify a default Activity to handle push notifications
//        PushService.setDefaultPushCallback(FrooderApplication.getInstance(), FoodListingListActivity.class);
//        
//
//       // ParseAnalytics.trackAppOpened(getIntent());
//
//        // If you would like all objects to be private by default, remove this line.
//        ParsePush.subscribeInBackground("", new SaveCallback() {
//        	  @Override
//        	  public void done(ParseException e) {
//        	    if (e == null) {
//        	      Log.d("com.parse.push", "successfully subscribed to the broadcast channel.");
//        	    } else {
//        	      Log.e("com.parse.push", "failed to subscribe for push", e);
//        	    }
//        	  } 
//        	}); 
//        ParseInstallation.getCurrentInstallation().saveInBackground();
       
    }

    
    @Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
    	getMenuInflater().inflate(R.menu.add_food, menu);
		getMenuInflater().inflate(R.menu.settings, menu);
		return true;
	}
    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();
        if (id == R.id.action_settings) {
            //Intent intent = new Intent(this, SettingsActivity.class);
            //startActivity(intent);
        } else if (id == R.id.add_food){
        	Intent intent = new Intent(this, AddFoodActivity.class);
        	startActivity(intent);
        } else if (id == R.id.menuSortNewest) {
        	Log.e("menu", "sort by newest");
        	FoodListingListFragment listFrag = ((FoodListingListFragment) getFragmentManager() 
                    .findFragmentById(R.id.foodlisting_list));
        	listFrag.mListAdapter.sort(new Comparator<ParseObject>(){
        	    public int compare(ParseObject o1, ParseObject o2) 
        	    {
        	       Date o1Creation = o1.getCreatedAt();
        	       Date o2Creation = o2.getCreatedAt();
        	       return o1Creation.compareTo(o2Creation);
        	    }
        	});
        } else if (id == R.id.menuSortProximity) {
        	Log.e("menu", "sort by proximity");
        }
        return super.onOptionsItemSelected(item);
    }
    /**
     * Callback method from {@link FoodListingListFragment.Callbacks}
     * indicating that the item with the given ID was selected.
     */
    @Override
    public void onItemSelected(String id) {
        if (mTwoPane) {
            // In two-pane mode, show the detail view in this activity by
            // adding or replacing the detail fragment using a
            // fragment transaction.
            Bundle arguments = new Bundle();
            arguments.putString(FoodListingDetailFragment.ARG_ITEM_ID, id);
            FoodListingDetailFragment fragment = new FoodListingDetailFragment();
            fragment.setArguments(arguments);
            getFragmentManager().beginTransaction()
                    .replace(R.id.foodlisting_detail_container, fragment)
                    .commit();

        } else {
            // In single-pane mode, simply start the detail activity
            // for the selected item ID.
            Intent detailIntent = new Intent(this, FoodListingDetailActivity.class);
            detailIntent.putExtra(FoodListingDetailFragment.ARG_ITEM_ID, id);
            startActivity(detailIntent);
        }
    }
}
